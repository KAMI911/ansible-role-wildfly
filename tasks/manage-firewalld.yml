---
# task file for wildfly manage firewalld

- name: install firewalld package
  package:
    name: firewalld
    state: present
  when: wildfly_enable_firewalld

- name: ensure firewalld is running and enabled on boot
  service:
    name: firewalld
    state: started
    enabled: true
  when: wildfly_enable_firewalld

- name: check firewalld status
  shell: 'echo $(systemctl is-active firewalld)'
  register: service_firewalld

- block:
    - name: open wildfly management http tcp port
      firewalld:
        port: '{{ wildfly_management_http_port }}/tcp'
        permanent: true
        immediate: true
        state: enabled

    - name: open wildfly management https tcp port
      firewalld:
        port: '{{ wildfly_management_https_port }}/tcp'
        permanent: true
        immediate: true
        state: enabled

    - name: open wildfly http tcp port
      firewalld:
        port: '{{ wildfly_http_port }}/tcp'
        permanent: true
        immediate: true
        state: enabled

    - name: open wildfly https tcp port
      firewalld:
        port: '{{ wildfly_https_port }}/tcp'
        permanent: true
        immediate: true
        state: enabled
  when:
   - service_firewalld.stdout == 'active'
   - ((ansible_os_family == 'RedHat' and ansible_distribution_major_version|int  > 6) or ansible_os_family != 'RedHat')
   - wildfly_manage_firewalld

- block:
  - name: open wildfly management http tcp port on domain controller master
    firewalld:
      port: '{{ wildfly_master_http_port }}/tcp'
      permanent: true
      immediate: true
      state: enabled

  - name: open wildfly management https tcp port on domain controller master
    firewalld:
      port: '{{ wildfly_master_https_port }}/tcp'
      permanent: true
      immediate: true
      state: enabled

  - name: open wildfly management tcp port on domain controller master
    firewalld:
      port: '{{ wildfly_master_port }}/tcp'
      permanent: true
      immediate: true
      state: enabled
  when:
   - service_firewalld.stdout == 'active'
   - ((wildfly_mode == 'domain' and (wildfly_role == 'domain-master-slave' or wildfly_role == 'domain-master') and ansible_os_family == 'RedHat' and ansible_distribution_major_version|int  > 6) or ansible_os_family != 'RedHat')
   - wildfly_manage_firewalld

- name: add modcluster connection members
  become: true
  firewalld:
    permanent: yes
    immediate: yes
    rich_rule: 'rule family="ipv4" port port="23364" protocol="udp" source address="{{ item }}/32"  destination address="{{ wildfly_modcluster_address }}" log prefix="Undertow Modcluster ACCEPT " level="notice" limit value=3/m accept'
    state: enabled
  with_items:
   - '{{ wildfly_cluster_members }}'
  notify:
   - 'firewalld daemon reload'
  when:
   - service_firewalld.stdout == 'active'
   - ((wildfly_mode == 'domain' and (wildfly_role == 'domain-master-slave' or wildfly_role == 'domain-slave') and ansible_os_family == 'RedHat' and ansible_distribution_major_version|int  > 6) or ansible_os_family != 'RedHat')
   - wildfly_manage_firewalld
   - not wildfly_manage_firewalld_use_ipset

- block:
  become: true
  - name: add FirewallD IPsets
    template:
      src: firewalld-ipset.xml.j2
      dest: /etc/firewalld/ipsets/{{ item.filename }}
      owner: root
      group: root
      mode: 0644
    with_items: '{{ wildfly_cluster_ipsets }}'

  - name: add modcluster connection members using ipset
    firewalld:
      permanent: yes
      immediate: yes
      rich_rule: 'rule family="ipv4" port port="23364" protocol="udp"source ipset="{{ wildfly_manage_firewalld_ipset_name }}" destination address="{{ wildfly_modcluster_address }}" log prefix="Undertow Modcluster ACCEPT " level="info" limit value="3/m" accept'
      state: enabled
  notify:
   - 'firewalld daemon reload'
  when:
   - service_firewalld.stdout == 'active'
   - ((wildfly_mode == 'domain' and (wildfly_role == 'domain-master-slave' or wildfly_role == 'domain-slave') and ansible_os_family == 'RedHat' and ansible_distribution_major_version|int  > 6) or ansible_os_family != 'RedHat')
   - wildfly_manage_firewalld
   - wildfly_manage_firewalld_use_ipset
