---
# vault tasks file for wildfly

- block:
  - name: 'create Wildfly secure store directory'
    file:
      path: '{{ wildfly_vault_path }}'
      owner: '{{ wildfly_user }}'
      group: '{{ wildfly_group }}'
      mode: '0750'
      state: directory

  - name: create Wildfly Vault store
    become: true
    become_user: '{{ wildfly_user }}'
    shell: >
        {{ wildfly_java_home }}/bin/keytool -genseckey -alias {{ wildfly_vault_alias }} -storetype jceks \
        -keyalg {{ wildfly_vault_keyalg }} -keysize {{ wildfly_vault_keysize }} \
        -storepass {{ wildfly_vault_keystore_password }} -keypass {{ wildfly_vault_keystore_password }} \
        -keystore {{ wildfly_vault_file }} -dname '{{ wildfly_vault_dname }}'
    args:
        creates: "{{ wildfly_vault_file }}"
    no_log: false

  - name: create Wildfly Vault secrets
    become: true
    become_user: '{{ wildfly_user }}'
    shell: >
        {{ wildfly_base }}/bin/vault.sh -k {{ wildfly_vault_file }} -p {{ wildfly_vault_keystore_password }} \
        -e {{ wildfly_vault_path }} -i {{ wildfly_vault_iteration }} -s {{ wildfly_vault_salt }} \
        -v {{ wildfly_vault_alias }} -b {{ item.block }} -a {{ item.attribute }} -x {{ item.value }}
    with_items: '{{ wildfly_vault }}'
    no_log: false
    register: wildfly_vault_secret

  - debug:
      msg: "{{ wildfly_vault_secret }}"

  - debug:
      msg: '{{ item.stdout }}'
    with_items: '{{ wildfly_vault_secret.results }}'

  - debug:
      msg: '{{ item.stdout | regex_search("\/core-service.*\)\]\)", multiline=False, ignorecase=True) }}'
    with_items: '{{ wildfly_vault_secret.results }}'

  - set_fact:
      wildfly_vault_command: '{{ item.stdout | regex_search("\/core-service.*\)\]\)", multiline=False, ignorecase=True) }}'
    loop: '{{ wildfly_vault_secret.results }}'

  - debug:
      var: wildfly_vault_command

  - name: restart servers before apply Wildfly JBoss command line commands
    meta: flush_handlers

  - name: wait for local controller becomes available
    wait_for:
      host: {{ wildfly_master_address }}
      port: {{ wildfly_master_http_port }}
      delay: 15
      connect_timeout: 15

  - name: wait for local controller becomes available
    wait_for:
      host: {{ wildfly_management_bind_address }}
      port: {{ wildfly_management_http_port }}
      delay: 15
      connect_timeout: 10

  - name: process JBoss Vault command for standalone
    jbosscli:
      server: '{{ wildfly_master_address }}:{{ wildfly_master_http_port }}'
      cli_path: '{{ wildfly_base }}/bin'
      user: '{{ wildfly_management_users.0.name }}'
      password: '{{ wildfly_management_users.0.password }}'
      verbose: True
      command: '{{ wildfly_vault_command }}'
    when:
      - wildfly_mode == 'standalone'
    register: checkit

  - debug: var=checkit

  - name: process JBoss Vault command for domain member
    jbosscli:
      server: '{{ wildfly_master_address }}:{{ wildfly_master_http_port }}'
      cli_path: '{{ wildfly_base }}/bin'
      user: '{{ wildfly_management_users.0.name }}'
      password: '{{ wildfly_management_users.0.password }}'
      verbose: True
      command: '/host={{ ansible_hostname }}{{ wildfly_vault_command }}'
    when:
      - wildfly_mode == 'domain'
      - wildfly_role in [ 'domain-master-slave', 'domain-slave' ]
    register: checkit

  - debug: var=checkit
  when:
    - wildfly_vault_enable
