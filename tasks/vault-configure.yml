---
# vault_configure tasks file for wildfly

- block:
  - name: wait for wildfly domain member to master connection
    wait_for:
      path: '{{ wildfly_console_log }}'
      search_regex: 'Connected to master host controller at'
      delay: 10
      sleep: 3
      timeout: 300
    ignore_errors: true
    changed_when: false
  - name: cat file
    command: 'cat {{ wildfly_console_log }}'
    ignore_errors: true
    changed_when: false
  when:
    - wildfly_manage_service
    - wildfly_mode == 'domain'
    - wildfly_role in [ 'domain-master-slave', 'domain-slave' ]

- name: 'waiting for Wildfly to become available'
  wait_for:
    host: '{{ wildfly_master_address }}'
    port: '{{ wildfly_master_http_port }}'
    delay: 10
    sleep: 3
    timeout: 300

- name: process JBoss Vault command for standalone
  jbosscli:
    server: '{{ wildfly_master_address }}:{{ wildfly_master_http_port }}'
    cli_path: '{{ wildfly_base }}/bin'
    user: '{{ wildfly_management_users.0.name }}'
    password: '{{ wildfly_management_users.0.password }}'
    verbose: True
    command: 'if (outcome == success) of {{ wildfly_vault_command }},end-if'
  delay: 10
  retries: 30
  when:
    - wildfly_mode == 'standalone'

- name: process JBoss Vault command for domain member
  jbosscli:
    server: '{{ wildfly_master_address }}:{{ wildfly_master_http_port }}'
    cli_path: '{{ wildfly_base }}/bin'
    user: '{{ wildfly_management_users.0.name }}'
    password: '{{ wildfly_management_users.0.password }}'
    verbose: True
    command: 'if (outcome == success) of /host={{ ansible_hostname }}{{ wildfly_vault_command }},end-if'
  delay: 10
  retries: 30
  when:
    - wildfly_mode == 'domain'
    - wildfly_role in [ 'domain-master-slave', 'domain-slave' ]
