---
# tasks file for wildfly

- name: create management users
  become: true
  become_user: '{{ wildfly_user }}'
  shell: >
    {{ wildfly_base }}/bin/add-user.sh -u {{ item.name }} -p {{ item.password }} &&
    touch {{ wildfly_base }}/.mgmt-users.{{ item.name }}.provisioned
  args:
    creates: "{{ wildfly_base }}/.mgmt-users.{{ item.name }}.provisioned"
  with_items: "{{ wildfly_management_users }}"
  when: wildfly_management_users | length > 0
  no_log: false

- name: create application users
  become: true
  become_user: '{{ wildfly_user }}'
  shell: >
    {{ wildfly_base }}/bin/add-user.sh -a -u {{ item.name }} -p {{ item.password }} &&
    touch {{ wildfly_base }}/.app-users.{{ item.name }}.provisioned
  args:
    creates: "{{ wildfly_base }}/.app-users.{{ item.name }}.provisioned"
  with_items: "{{ wildfly_app_users }}"
  when: wildfly_app_users | length > 0
  no_log: false

- name: create domain controller management users
  become: true
  become_user: '{{ wildfly_user }}'
  shell: >
    {{ wildfly_base }}/bin/add-user.sh -dc {{ wildfly_base }}/domain-controller/configuration -u {{ item.name }} -p {{ item.password }} &&
    touch {{ wildfly_base }}/.mgmt-dc-users.{{ item.name }}.provisioned
  args:
    creates: "{{ wildfly_base }}/.mgmt-dc-users.{{ item.name }}.provisioned"
  with_items: "{{ wildfly_management_users }}"
  when: wildfly_management_users | length > 0 and (wildfly_role == 'domain-master-slave' or wildfly_role == 'domain-master')
  no_log: false

- name: enforce secure permissions on password files
  file:
    path: "{{ wildfly_base }}/{{ wildfly_mode }}/configuration/{{ item }}"
    owner: "{{ wildfly_user }}"
    group: "{{ wildfly_group }}"
    mode: "0600"
  with_items:
    - mgmt-groups.properties
    - mgmt-users.properties
