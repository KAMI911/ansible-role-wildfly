---
# task file for wildfly

- name: create wildfly etc directory
  file:
    path: '{{ wildfly_conf_dir }}'
    state: directory
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '0750'

- name: copy wildfly configuration
  template:
    src: wildfly.conf.j2
    dest: '{{ wildfly_conf_dir }}/{{ wildfly_instance_name }}.conf'
    owner: root
    group: root
    mode: '0640'
  notify:
    - restart wildfly
    - change data mode

- name: create symlink to /etc/default/wildfly.conf
  file:
    state: link
    src: '{{ wildfly_conf_dir }}/{{ wildfly_instance_name }}.conf'
    dest: /etc/default/{{ wildfly_instance_name }}.conf

- include: configure-properties.yml

- name: create symlink to upstream init script
  file:
    state: link
    src: '{{ wildfly_link_dir}}/{{ wildfly_init_src_path }}/init.d/wildfly-init-{{ ansible_os_family | lower }}.sh'
    dest: '{{ wildfly_init_dir }}/{{ wildfly_instance_name }}'
    force: yes
#  when: ansible_service_mgr in ['init', 'upstart']
  notify:
    - restart wildfly
    - change data mode

- name: copy wildfly systemd unit file
  template: src=wildfly.service.j2 dest={{ wildfly_systemd_dir }}/{{ wildfly_instance_name }}.service owner=root
            group=root mode=0640
  when: ansible_service_mgr == 'systemd'
  notify:
    - restart wildfly
    - change data mode

- block:
  - name: open wildfly management http tcp port
    firewalld:
      port: '{{ wildfly_manage_http_port }}/tcp'
      permanent: yes
      immediate: yes
      state: enabled

  - name: open wildfly management https tcp port
    firewalld:
      port: '{{ wildfly_manage_https_port }}/tcp'
      permanent: yes
      immediate: yes
      state: enabled

  - name: open wildfly http tcp port
    firewalld:
      port: '{{ wildfly_http_port }}/tcp'
      permanent: yes
      immediate: yes
      state: enabled

  - name: open wildfly https tcp port
    firewalld:
      port: '{{ wildfly_https_port }}/tcp'
      permanent: yes
      immediate: yes
      state: enabled
  when: ansible_distribution_version|version_compare(7, '=') and wildfly_manage_firewall

- meta: flush_handlers

- block:
    - name: enable and start the service
      service:
        name: '{{ wildfly_instance_name }}'
        state: started
        enabled: yes
    - name: wait for wildfly to start
      wait_for:
        path: "{{ wildfly_dir }}/{{ wildfly_mode }}/log/server.log"
        search_regex: 'started in'
  when: wildfly_manage_service

- name: delete wildfly tar file
  file:
    path: '{{ wildfly_download_dir }}/{{ wildfly_download_file }}'
    state: absent
  when: wildfly_remove_download_file
