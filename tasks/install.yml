---
# task file for wildfly

- name: 'create application directory: {{ wildfly_dir }}'
  file:
    path: '{{ wildfly_dir }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: yes
    state: directory

- name: create wildfly link directory
  file:
    path: '{{ wildfly_install_dir }}/wildfly'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: no
    state: directory

- name: create wildfly log directory
  file:
    path: '{{ wildfly_console_log_dir }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: yes
    state: directory

- name: 'unarchive downloaded {{ wildfly_download_file }} file'
  unarchive:
    src: '{{ wildfly_download_dir }}/{{ wildfly_download_file }}'
    dest: '{{ wildfly_install_dir }}/{{ wildfly_instance_name }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    # mode: '{{ wildfly_dir_mode }}'
    copy: no
    creates: "{{ wildfly_dir }}/bin/{{ wildfly_mode }}.sh"
    exclude:
    - "configuration"
    - "configuration"
  when: wildfly_installed.stat.exists == False or force_wildfly_install == True

- name: 'create domain configuration directory in: {{ wildfly_dir }}'
  file:
    path: '{{ wildfly_dir }}/domain/{{ item }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: yes
    state: directory
  with_items:
   - configuration
   - data/content
   - tmp/auth
  when: wildfly_mode == 'domain'

- name: 'create domain-controller configuration directory in: {{ wildfly_dir }}'
  file:
    path: '{{ wildfly_dir }}/domain-controller/{{ item }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: yes
    state: directory
  with_items:
   - configuration
   - data/content
   - tmp/auth
  when: wildfly_role == 'domain-master-slave'

- name: 'create standalone configuration directory in: {{ wildfly_dir }}'
  file:
    path: '{{ wildfly_dir }}/standalone/{{ item }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: yes
    state: directory
  with_items:
   - configuration
   - deployments
   - lib/ext
   - tmp/auth
  when: wildfly_mode == 'standalone'

- name: create symlink to installed version
  file:
    state: link
    src: '{{ wildfly_dir }}'
    dest: '{{ wildfly_link_dir }}'
    force: yes
  when: wildfly_create_symlink

