---
# task file for wildfly

- block:
    - name: create wildfly group
      group:
        name: '{{ wildfly_group }}'
        system: true
        state: present

    - name: create wildfly user
      user:
        name: '{{ wildfly_user }}'
        group: '{{ wildfly_group }}'
        createhome: false
        shell: "{{ wildfly_user_shell |default(omit) }}"
        state: present
        system: true
  when: wildfly_manage_user

- name: create wildfly log directory
  file:
    path: '{{ wildfly_console_log_dir }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: true
    state: directory

- name: 'unarchive downloaded {{ wildfly_download_file }} file'
  unarchive:
    src: '{{ wildfly_download_dir }}/{{ wildfly_download_file }}'
    dest: '{{ wildfly_install_dir }}/{{ wildfly_instance_name }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    # mode: '{{ wildfly_dir_mode }}'
    copy: false
    creates: "{{ wildfly_dir }}/jboss-modules.jar"
  when: not wildfly_installed.stat.exists or force_wildfly_install


- name: create wildfly link directory
  file:
    path: '{{ wildfly_install_dir }}/wildfly'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: false
    state: directory

- name: 'create domain configuration directory in: {{ wildfly_base }}'
  file:
    path: '{{ wildfly_base }}/domain/{{ item }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    state: directory
  with_items:
    - configuration
    - data/content
    - tmp/auth
  when: wildfly_mode == 'domain'

- name: 'create domain-controller configuration directory in: {{ wildfly_base }}'
  file:
    path: '{{ wildfly_base }}/domain-controller/{{ item }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    state: directory
  with_items:
    - configuration
    - data/content
    - tmp/auth
  when: wildfly_role == 'domain-master-slave'

- name: 'create standalone configuration directory in: {{ wildfly_base }}'
  file:
    path: '{{ wildfly_base }}/standalone/{{ item }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    state: directory
  with_items:
    - configuration
    - deployments
    - lib/ext
    - tmp/auth
  # when: wildfly_mode == 'standalone'

- name: create symlink for 'wildfly' to the installation directory
  file:
    src: '{{ wildfly_dir }}'
    dest: '{{ wildfly_home }}'
    state: link

- name: create symlink to installed version
  file:
    state: link
    src: '{{ wildfly_base }}'
    dest: '{{ wildfly_link_dir }}'
    force: true
  when: wildfly_create_symlink

- name: create symlink for 'bin' to the 'wildfly' directory
  file:
    src: '{{ wildfly_home }}/{{ item }}'
    dest: '{{ wildfly_base }}/{{ item }}'
    state: link
  with_items:
    - appclient
    - bin
    - copyright.txt
    - docs
    - jboss-modules.jar
    - LICENSE.txt
    - modules
    - README.txt
    - welcome-content
