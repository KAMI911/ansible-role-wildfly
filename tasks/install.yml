---
# task file for wildfly

- name: Install OpenJDK
  yum:
    name: java-1.8.0-openjdk-headless
    state: present
  when: wildfly_manage_java_pkg

- block:
    - name: create wildfly group
      group:
        name: '{{ wildfly_group }}'
        system: yes
        state: present

    - name: create wildfly user
      user:
        name: '{{ wildfly_user }}'
        group: '{{ wildfly_group }}'
        createhome: no
        shell: "{{ wildfly_user_shell |default(omit) }}"
        state: present
        system: yes
  when: wildfly_manage_user

- name: 'create application directory: {{ wildfly_dir }}'
  file:
    path: '{{ wildfly_dir }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: yes
    state: directory

- name: create wildfly link directory
  file:
    path: '{{ wildfly_install_dir }}/wildfly'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: no
    state: directory

- name: create wildfly log directory
  file:
    path: '{{ wildfly_console_log_dir }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: yes
    state: directory

- name: create download directory
  file:
    path: '{{ wildfly_download_dir }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '{{ wildfly_dir_mode }}'
    recurse: yes
    state: directory

- name: is already downloaded
  stat:
    path: '{{ wildfly_download_dir }}/{{ wildfly_download_file }}'
  register: wildfly_is_download_file

- name: download wildfly tar file
  get_url:
    url: '{{ wildfly_download_url }}'
    dest: '{{ wildfly_download_dir }}/{{ wildfly_download_file }}'
    validate_certs: '{{ wildfly_download_validate_certs }}'
  when: wildfly_is_download_file.stat.exists == False or wildfly_force_download_file == True

- name: unarchive downloaded file
  unarchive:
    src: '{{ wildfly_download_dir }}/{{ wildfly_download_file }}'
    dest: '{{ wildfly_install_dir }}/{{ wildfly_instance_name }}'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    # mode: '{{ wildfly_dir_mode }}'
    copy: no
    creates: "{{ wildfly_dir }}/bin/{{ wildfly_mode }}.sh"

- name: create symlink to installed version
  file:
    state: link
    src: '{{ wildfly_dir }}'
    dest: '{{ wildfly_link_dir }}'
    force: yes
  when: wildfly_create_symlink

