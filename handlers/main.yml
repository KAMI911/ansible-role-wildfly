---
# handlers file for wildfly

- name: systemd reload
  become: true
  systemd:
    daemon_reload: true
  listen: 'systemd daemon reload'
  when:
    - wildfly_manage_service
    - ((ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 7) or ansible_os_family != 'RedHat')

- name: restart wildfly
  become: true
  service:
    name: '{{ wildfly_instance_name }}'
    state: '{{ wildfly_service_status }}'
    enabled: '{{ wildfly_service_enabled }}'
  listen: 'restart wildfly services'
  when:
    - wildfly_manage_service

- name: restart wildfly domain controller
  become: true
  service:
    name: '{{ wildfly_dc_instance_name }}'
    state: '{{ wildfly_service_status }}'
    enabled: '{{ wildfly_service_enabled }}'
  listen: 'restart wildfly domain services'
  when:
    - wildfly_manage_service

- name: change data mode
  file:
    path: '{{ wildfly_dir }}/{{ wildfly_mode }}/data'
    owner: '{{ wildfly_user }}'
    group: '{{ wildfly_group }}'
    mode: '0750'
    recurse: no
    state: directory
  when: wildfly_manage_data

- name: firewalld reload
  become: true
  command: firewall-cmd --reload
  listen: 'firewalld daemon reload'
  when:
    - wildfly_manage_firewalld
    - wildfly_enable_firewalld
    - service_firewalld.stdout == 'active'
    - ((ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 7) or ansible_os_family != 'RedHat')
